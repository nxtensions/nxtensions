// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`application generator --e2eTestRunner should configure playwright correctly 1`] = `
"import { defineConfig, devices } from '@playwright/test';
import { nxE2EPreset } from '@nx/playwright/preset';

import { workspaceRoot } from '@nx/devkit';

// For CI, you may want to set BASE_URL to the deployed application.
const baseURL = process.env['BASE_URL'] || 'http://localhost:4321';

/**
 * Read environment variables from file.
 * https://github.com/motdotla/dotenv
 */
// require('dotenv').config();

/**
 * See https://playwright.dev/docs/test-configuration.
 */
export default defineConfig({
  ...nxE2EPreset(__filename, { testDir: './src' }),
  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */
  use: {
    baseURL,
    /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */
    trace: 'on-first-retry',
  },
  /* Run your local dev server before starting the tests */
  webServer: {
    command: 'pnpm exec nx run app1:dev',
    url: 'http://localhost:4321',
    reuseExistingServer: !process.env.CI,
    cwd: workspaceRoot,
  },
  projects: [
    {
      name: 'chromium',
      use: { ...devices['Desktop Chrome'] },
    },

    {
      name: 'firefox',
      use: { ...devices['Desktop Firefox'] },
    },

    {
      name: 'webkit',
      use: { ...devices['Desktop Safari'] },
    },

    // Uncomment for mobile browsers support
    /* {
      name: 'Mobile Chrome',
      use: { ...devices['Pixel 5'] },
    },
    {
      name: 'Mobile Safari',
      use: { ...devices['iPhone 12'] },
    }, */

    // Uncomment for branded browsers
    /* {
      name: 'Microsoft Edge',
      use: { ...devices['Desktop Edge'], channel: 'msedge' },
    },
    {
      name: 'Google Chrome',
      use: { ...devices['Desktop Chrome'], channel: 'chrome' },
    } */
  ],
});
"
`;

exports[`application generator --integrations should add integrations to the astro config 1`] = `
"import { defineConfig } from 'astro/config';
import solid from '@astrojs/solid-js';
import vue from '@astrojs/vue';

// https://astro.build/config
export default defineConfig({
  outDir: '../dist/app1',
  integrations: [solid(), vue()],
});
"
`;

exports[`application generator should add project configuration 1`] = `
{
  "$schema": "../node_modules/nx/schemas/project-schema.json",
  "name": "app1",
  "projectType": "application",
  "root": "app1",
  "sourceRoot": "app1/src",
  "tags": [],
  "targets": {
    "build": {
      "executor": "@nxtensions/astro:build",
      "options": {},
    },
    "check": {
      "executor": "@nxtensions/astro:check",
    },
    "dev": {
      "executor": "@nxtensions/astro:dev",
      "options": {},
    },
    "preview": {
      "executor": "@nxtensions/astro:preview",
      "options": {},
    },
    "sync": {
      "executor": "@nxtensions/astro:sync",
    },
  },
}
`;
